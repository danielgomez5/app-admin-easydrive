<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>