<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>