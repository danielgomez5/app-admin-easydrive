<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDashboard.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /39/TiMGSG3OJwAAAABJRU5ErkJggg==
</value>
  </data>
</root>